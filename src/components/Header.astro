---
import TableOfContents from "@/components/TableOfContents.astro"
import { SITE_TITLE } from "@/constants/metadata.ts"
import { getCategories } from "@/libraries/microcms"
import hamburgerIconSrc from "@/assets/icon/icon-hamburger.svg"
import { getImage } from "astro:assets"

type Props = {
    currentPage?: string
}

const { currentPage } = Astro.props

const categories = await getCategories()

const hamburgerIcon = await getImage({ src: hamburgerIconSrc })
---

<header class="c-header l-header">
    <button
        type="button"
        id="hamburger"
        class="c-header__hamburger"
        aria-expand="false"
        aria-controls="menu"
        aria-label="メニュー"
    >
        <span class="c-header__hamburgerText" aria-hidden="true">メニュー</span>
    </button>

    <div class="c-header__contents">
        <div class="c-header__navigation">
            <div class="c-header__logo">{SITE_TITLE}</div>
            <a href="/" class={`c-header__link ` + (currentPage === "home" ? "is-current" : "")}> Home </a>
            {
                categories.map((category) => (
                    <a
                        href={`/${category.id}`}
                        class={`c-header__link ` + (currentPage === category.id ? "is-current" : "")}
                    >
                        {category.name}
                    </a>
                ))
            }
        </div>

        <slot name="toc" />
    </div>
</header>

<script>
    const hamburger = document.querySelector("#hamburger")
    hamburger?.addEventListener("click", () => {
        hamburger.classList.toggle("is-active")
    })
</script>

<style define:vars={{ hamburgerIcon: `url(${hamburgerIcon.src})` }}>
    .l-header {
        position: relative;
        width: 280px;
        padding-top: 100px;
        flex-shrink: 0;
    }

    @media screen and (max-width: 768px) {
        .l-header {
            position: fixed;
            padding-top: 0;
            right: 0;
            width: 80px;
            height: 80px;
        }
    }

    @media screen and (max-width: 768px) {
        .c-header {
            overflow: hidden;
            background-color: var(--bgsub2);
            border-radius: 0 0 0 100px;
            z-index: 9999;
        }
    }

    .c-header__hamburger {
        @media screen and (max-width: 768px) {
            background: var(--hamburgerIcon) no-repeat center;
            display: block;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-20%, -80%);
            z-index: 100;

            &.is-active ~ .c-header__contents {
                display: flex;
                width: 100%;
                height: 100%;
                visibility: visible;

                .c-header__navigation {
                    animation: fadeIn_down 0.5s cubic-bezier(0.165, 0.84, 0.44, 1) 0.2s forwards;
                }
            }
        }
    }

    .c-header__hamburgerText {
        visibility: hidden;
    }

    .c-header__logo {
        font-size: 2vw;
        font-weight: 800;
        text-align: right;
        line-height: 1;
        margin-bottom: 24px;

        @media screen and (max-width: 768px) {
            font-size: 32px;
        }
    }

    .c-header__contents {
        display: flex;
        flex-direction: column;
        position: sticky;
        top: 20px;
        gap: 40px;

        @media screen and (max-width: 768px) {
            width: 80px;
            height: 80px;
            position: fixed;
            top: 0;
            right: 0;
            justify-content: center;
            border-radius: 0 0 0 100px;
            background-color: var(--bgsub2);
            visibility: hidden;
            transition: 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
        }
    }

    .c-header__navigation {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        margin-right: 100px;

        @media screen and (max-width: 768px) {
            margin-left: 20px;
            margin-right: 20px;
            justify-content: center;
            align-items: flex-start;
            gap: 24px;
            font-size: 24px;
            opacity: 0;
        }
    }

    .c-header__link {
        &.is-current {
            text-decoration: none;
            color: red;
        }
    }
</style>
